import{_ as n,a as s}from"./app.98a8c9b9.js";const a={},e=s(`<h2 id="\u51FD\u6570\u67EF\u91CC\u5316" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u67EF\u91CC\u5316" aria-hidden="true">#</a> \u51FD\u6570\u67EF\u91CC\u5316</h2><h3 id="arguments" tabindex="-1"><a class="header-anchor" href="#arguments" aria-hidden="true">#</a> arguments</h3><ol><li>\u7B80\u5355\u8BF4\u5C31\u662F\u6240\u6709\uFF08\u975E\u7BAD\u5934\uFF09\u51FD\u6570\u7684\u5B9E\u53C2\uFF08\u662F\u4E2A\u4F2A\u6570\u7EC4\uFF0C\u5373arguments\uFF09</li><li>\u9664\u4E86length\u548C\u7D22\u5F15\u5143\u7D20\u5916\u6CA1\u6709\u4EFB\u4F55array\u5C5E\u6027</li><li>typeof\u8FD4\u56DEobject</li><li>\u53EF\u4EE5\u88AB\u8F6C\u6362\u4E3Aarray</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
<span class="token comment">// ES6</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u67EF\u91CC\u5316" tabindex="-1"><a class="header-anchor" href="#\u67EF\u91CC\u5316" aria-hidden="true">#</a> \u67EF\u91CC\u5316</h3><p>\u628A\u63A5\u53D7\u591A\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u53D8\u6362\u6210\u63A5\u53D7\u4E00\u4E2A\u5355\u4E00\u53C2\u6570(\u6700\u521D\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570)\u7684\u51FD\u6570\uFF0C\u5E76\u4E14\u8FD4\u56DE\u63A5\u53D7\u4F59\u4E0B\u7684\u53C2\u6570\u800C\u4E14\u8FD4\u56DE\u7ED3\u679C\u7684\u65B0\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6B63\u5219\u8868\u8FBE\u5F0F</span>

<span class="token comment">// \u6821\u9A8C\u6570\u5B57</span>
<span class="token keyword">let</span> numberReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[0-9]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>

<span class="token comment">// \u6821\u9A8C\u5C0F\u5199\u5B57\u6BCD</span>
<span class="token keyword">let</span> stringReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>

<span class="token comment">// currying \u540E\uFF08\u5F62\u6210\u4E86\u95ED\u5305\uFF09</span>
<span class="token keyword">function</span> <span class="token function">curryingCheck</span><span class="token punctuation">(</span><span class="token parameter">reg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">txt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6821\u9A8C\u6570\u5B57</span>
<span class="token keyword">let</span> checkNumber <span class="token operator">=</span> <span class="token function">curryingCheck</span><span class="token punctuation">(</span>numberReg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> checkString <span class="token operator">=</span> <span class="token function">curryingCheck</span><span class="token punctuation">(</span>stringReg<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">checkNumber</span><span class="token punctuation">(</span><span class="token string">&quot;13888888888&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">checkString</span><span class="token punctuation">(</span><span class="token string">&quot;loydLee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="\u597D\u5904" tabindex="-1"><a class="header-anchor" href="#\u597D\u5904" aria-hidden="true">#</a> \u597D\u5904</h4><ol><li>\u53C2\u6570\u590D\u7528</li><li>\u63D0\u524D\u786E\u8BA4</li><li>\u5EF6\u8FDF\u8FD0\u884C</li></ol>`,9);function p(t,c){return e}var l=n(a,[["render",p]]);export{l as default};
