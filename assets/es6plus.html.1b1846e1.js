import{_ as n,a as s}from"./app.81b5f47a.js";const a={},p=s(`<h2 id="es6" tabindex="-1"><a class="header-anchor" href="#es6" aria-hidden="true">#</a> ES6+</h2><h3 id="map\u548Cset\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#map\u548Cset\u533A\u522B" aria-hidden="true">#</a> map\u548Cset\u533A\u522B</h3><ol><li>map\u7C7B\u4F3C\u4E8Eobject\uFF0C\u662Fkey:value\uFF0Cset\u7C7B\u4F3C\u4E8Earray\uFF0C\u662Fvalue:value</li><li>map\u7684key\u4E0D\u80FD\u6539\u53D8\uFF0Cvalue\u53EF\u4EE5\u6539\u53D8\uFF0Cset\u7684value\u4E0D\u80FD\u6539\u53D8\uFF08\u56E0\u4E3Avalue\u5C31\u662Fkey\uFF09</li></ol><h3 id="\u5BF9\u8C61\u53D6\u503C-\u5BF9\u8C61\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u53D6\u503C-\u5BF9\u8C61\u89E3\u6784" aria-hidden="true">#</a> \u5BF9\u8C61\u53D6\u503C\uFF08\u5BF9\u8C61\u89E3\u6784\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token literal-property property">e</span><span class="token operator">:</span><span class="token number">5</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> obj<span class="token punctuation">.</span>a
<span class="token keyword">const</span> b <span class="token operator">=</span> obj<span class="token punctuation">.</span>b
<span class="token keyword">const</span> c <span class="token operator">=</span> obj<span class="token punctuation">.</span>c
<span class="token keyword">const</span> d <span class="token operator">=</span> obj<span class="token punctuation">.</span>d
<span class="token keyword">const</span> e <span class="token operator">=</span> obj<span class="token punctuation">.</span>e
<span class="token keyword">const</span> f <span class="token operator">=</span> obj<span class="token punctuation">.</span>a <span class="token operator">+</span> obj<span class="token punctuation">.</span>d
<span class="token keyword">const</span> g <span class="token operator">=</span> obj<span class="token punctuation">.</span>c <span class="token operator">+</span> obj<span class="token punctuation">.</span>e

<span class="token comment">// after</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e <span class="token punctuation">}</span> <span class="token operator">=</span> obj
<span class="token keyword">const</span> f <span class="token operator">=</span> a <span class="token operator">+</span> d
<span class="token keyword">const</span> g <span class="token operator">=</span> c <span class="token operator">+</span> e

<span class="token comment">// \u60F3\u521B\u5EFA\u7684\u53D8\u91CF\u540D\u548C\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u4E0D\u4E00\u81F4</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> a1 <span class="token punctuation">}</span> <span class="token operator">=</span> obj
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span> <span class="token comment">// 1</span>

<span class="token comment">//\u8981\u6CE8\u610F\u89E3\u6784\u7684\u5BF9\u8C61\u4E0D\u80FD\u4E3Aundefined\u3001null\u3002\u5426\u5219\u4F1A\u62A5\u9519\uFF0C\u6545\u8981\u7ED9\u88AB\u89E3\u6784\u7684\u5BF9\u8C61\u4E00\u4E2A\u9ED8\u8BA4\u503C</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e <span class="token punctuation">}</span> <span class="token operator">=</span> obj <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="\u5408\u5E76\u6570\u636E-\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u6570\u636E-\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5408\u5E76\u6570\u636E\uFF08\u6269\u5C55\u8FD0\u7B97\u7B26\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">]</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// [1,2,3,1,5,6]</span>
<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">,</span> obj2<span class="token punctuation">)</span> <span class="token comment">// {a:1,b:1}</span>

<span class="token comment">// after</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">]</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [1,2,3,5,6]</span>
<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj1<span class="token punctuation">,</span> <span class="token operator">...</span>obj2<span class="token punctuation">}</span> <span class="token comment">// {a:1,b:1}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u62FC\u63A5\u5B57\u7B26\u4E32-\u5B57\u7B26\u4E32\u6A21\u677F\u53EF\u4EE5\u8FD0\u884C\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u62FC\u63A5\u5B57\u7B26\u4E32-\u5B57\u7B26\u4E32\u6A21\u677F\u53EF\u4EE5\u8FD0\u884C\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u62FC\u63A5\u5B57\u7B26\u4E32\uFF08\u5B57\u7B26\u4E32\u6A21\u677F\u53EF\u4EE5\u8FD0\u884C\u8868\u8FBE\u5F0F\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5C0F\u660E&#39;</span>
<span class="token keyword">const</span> score <span class="token operator">=</span> <span class="token number">59</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> score <span class="token operator">&gt;</span> <span class="token number">60</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u7684\u8003\u8BD5\u6210\u7EE9\u53CA\u683C</span><span class="token template-punctuation string">\`</span></span> 
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u7684\u8003\u8BD5\u6210\u7EE9\u4E0D\u53CA\u683C</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token comment">// after</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;\u5C0F\u660E&#39;</span>
<span class="token keyword">const</span> score <span class="token operator">=</span> <span class="token number">59</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>score <span class="token operator">&gt;</span> <span class="token number">60</span> <span class="token operator">?</span> <span class="token string">&#39;\u7684\u8003\u8BD5\u6210\u7EE9\u53CA\u683C&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\u7684\u8003\u8BD5\u6210\u7EE9\u4E0D\u53CA\u683C&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="if\u4E2D\u5224\u65AD\u6761\u4EF6-includes" tabindex="-1"><a class="header-anchor" href="#if\u4E2D\u5224\u65AD\u6761\u4EF6-includes" aria-hidden="true">#</a> if\u4E2D\u5224\u65AD\u6761\u4EF6\uFF08includes\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">if</span><span class="token punctuation">(</span> type <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> type <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">||</span> type <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">||</span> type <span class="token operator">==</span> <span class="token number">4</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>

<span class="token comment">// after</span>
<span class="token keyword">const</span> condition <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">if</span><span class="token punctuation">(</span> condition<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u5217\u8868\u641C\u7D22-find" tabindex="-1"><a class="header-anchor" href="#\u5217\u8868\u641C\u7D22-find" aria-hidden="true">#</a> \u5217\u8868\u641C\u7D22\uFF08find\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token comment">// \u641C\u7D22\u4E00\u822C\u5206\u4E3A\u7CBE\u786E\u641C\u7D22\u548C\u6A21\u7CCA\u641C\u7D22\u3002\u641C\u7D22\u4E5F\u53EB\u8FC7\u6EE4\uFF0C\u4E00\u822C\u7528filter\u6765\u5B9E\u73B0</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span> 
  <span class="token parameter">item</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> item <span class="token operator">===</span> <span class="token number">3</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token comment">// after</span>
<span class="token comment">// find\u65B9\u6CD5\u4E2D\u627E\u5230\u7B26\u5408\u6761\u4EF6\u7684\u9879\uFF0C\u5C31\u4E0D\u4F1A\u7EE7\u7EED\u904D\u5386\u6570\u7EC4</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> 
  <span class="token parameter">item</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> item <span class="token operator">===</span> <span class="token number">3</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="\u6241\u5E73\u5316\u6570\u7EC4-flat\u548Cinfinity" tabindex="-1"><a class="header-anchor" href="#\u6241\u5E73\u5316\u6570\u7EC4-flat\u548Cinfinity" aria-hidden="true">#</a> \u6241\u5E73\u5316\u6570\u7EC4\uFF08flat\u548CInfinity\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token comment">// \u4E00\u4E2A\u90E8\u95E8JSON\u6570\u636E\u4E2D\uFF0C\u5C5E\u6027\u540D\u662F\u90E8\u95E8id\uFF0C\u5C5E\u6027\u503C\u662F\u4E2A\u90E8\u95E8\u6210\u5458id\u6570\u7EC4\u96C6\u5408\uFF0C\u73B0\u5728\u8981\u628A\u6709\u90E8\u95E8\u7684\u6210\u5458id\u90FD\u63D0\u53D6\u5230\u4E00\u4E2A\u6570\u7EC4\u96C6\u5408\u4E2D</span>
<span class="token keyword">const</span> deps <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">14</span> <span class="token punctuation">,</span><span class="token number">79</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">64</span> <span class="token punctuation">,</span><span class="token number">105</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> member <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">in</span> deps <span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> deps<span class="token punctuation">[</span>item<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    member <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token operator">...</span>member<span class="token punctuation">,</span> <span class="token operator">...</span>value <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
member <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>member<span class="token punctuation">)</span> <span class="token punctuation">]</span>

<span class="token comment">// after</span>
<span class="token comment">// Infinity\u4F5C\u4E3Aflat\u7684\u53C2\u6570\uFF0C\u4F7F\u5F97\u65E0\u9700\u77E5\u9053\u88AB\u6241\u5E73\u5316\u7684\u6570\u7EC4\u7684\u7EF4\u5EA6</span>
<span class="token comment">// flat\u65B9\u6CD5\u4E0D\u652F\u6301IE\u6D4F\u89C8\u5668</span>
<span class="token keyword">const</span> deps <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">14</span> <span class="token punctuation">,</span><span class="token number">79</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">64</span> <span class="token punctuation">,</span><span class="token number">105</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> member <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>deps<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="\u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u503C-\u53EF\u9009\u94FE\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u503C-\u53EF\u9009\u94FE\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> \u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u503C\uFF08\u53EF\u9009\u94FE\u64CD\u4F5C\u7B26\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> obj <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>name

<span class="token comment">// after</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> obj <span class="token operator">?.</span> name
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u52A8\u6001\u5BF9\u8C61\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u5BF9\u8C61\u5C5E\u6027" aria-hidden="true">#</a> \u52A8\u6001\u5BF9\u8C61\u5C5E\u6027\uFF08[]\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">topic</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> index <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;\u8BDD\u9898\u5185\u5BB9&#39;</span>

<span class="token comment">// after</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">1</span>
obj<span class="token punctuation">[</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">topic</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> index <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;\u8BDD\u9898\u5185\u5BB9&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u8F93\u5165\u6846\u975E\u7A7A\u7684\u5224\u65AD-\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u6846\u975E\u7A7A\u7684\u5224\u65AD-\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u8F93\u5165\u6846\u975E\u7A7A\u7684\u5224\u65AD\uFF08\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> value <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>

<span class="token comment">// after</span>
<span class="token comment">// \u5DE6\u4FA7\u64CD\u4F5C\u6570\u4E3Anull\u6216\u8005undefined\u65F6\uFF0C\u8FD4\u56DE\u53F3\u4FA7\u64CD\u4F5C\u6570\uFF0C\u5426\u5219\u8FD4\u56DE\u5DE6\u4FA7\u64CD\u4F5C\u6570</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span> value <span class="token operator">??</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u5F02\u6B65\u51FD\u6570-async-await" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u51FD\u6570-async-await" aria-hidden="true">#</a> \u5F02\u6B65\u51FD\u6570\uFF08async/await\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span> <span class="token parameter">resolve<span class="token punctuation">,</span> reject</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span> <span class="token parameter">resolve<span class="token punctuation">,</span> reject</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// 1</span>
    <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// 2</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// after</span>
<span class="token comment">// \u5BB9\u6613\u5F62\u6210\u56DE\u8C03\u5730\u72F1\uFF0C\u5EFA\u8BAE\u4F7F\u7528async\u548Cawait\u8F6C\u4E3A\u540C\u6B65\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// 1</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// 2</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F46\u662F\u8981\u505A\u5E76\u53D1\u8BF7\u6C42\u65F6\uFF0C\u8FD8\u662F\u8981\u7528\u5230Promise.all()</span>
<span class="token comment">// \u5982\u679C\u5E76\u53D1\u8BF7\u6C42\u65F6\uFF0C\u53EA\u8981\u5176\u4E2D\u4E00\u4E2A\u5F02\u6B65\u51FD\u6570\u5904\u7406\u5B8C\u6210\uFF0C\u5C31\u8FD4\u56DE\u7ED3\u679C\uFF0C\u8981\u7528\u5230Promise.race()</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// [1,2]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="\u6C42\u4EA4\u96C6" tabindex="-1"><a class="header-anchor" href="#\u6C42\u4EA4\u96C6" aria-hidden="true">#</a> \u6C42\u4EA4\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// before</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> intersect <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// after</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> intersect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u5E76\u96C6</span>
<span class="token keyword">let</span> union <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// \u5DEE\u96C6</span>
<span class="token keyword">let</span> difference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,25);function t(e,o){return p}var l=n(a,[["render",t]]);export{l as default};
