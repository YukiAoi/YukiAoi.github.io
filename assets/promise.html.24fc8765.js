import{_ as n,a as s}from"./app.98a8c9b9.js";const a={},p=s(`<h2 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> promise</h2><p>\u672C\u8D28\u4E0A<code>Promise</code>\u662F\u4E00\u4E2A\u51FD\u6570\u8FD4\u56DE\u7684\u5BF9\u8C61\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u5B83\u4E0A\u9762\u7ED1\u5B9A\u56DE\u8C03\u51FD\u6570\uFF0C\u8FD9\u6837\u6211\u4EEC\u5C31\u4E0D\u9700\u8981\u5728\u4E00\u5F00\u59CB\u628A\u56DE\u8C03\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u8FD9\u4E2A\u51FD\u6570\u4E86\u3002\u66F4\u73B0\u4EE3\u7684\u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>Promise\u5BF9\u8C61</code>\uFF0C\u4F7F\u5F97\u4F60\u53EF\u4EE5<code>\u5C06\u4F60\u7684\u56DE\u8C03\u51FD\u6570\u7ED1\u5B9A\u5728\u8BE5Promise</code>\u4E0A\u3002</p><h3 id="\u94FE\u5F0F\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#\u94FE\u5F0F\u8C03\u7528" aria-hidden="true">#</a> \u94FE\u5F0F\u8C03\u7528</h3><p>\u5728\u8FC7\u53BB\uFF0C\u8981\u60F3\u505A\u591A\u91CD\u7684\u5F02\u6B65\u64CD\u4F5C\uFF0C\u4F1A\u5BFC\u81F4\u7ECF\u5178\u7684\u56DE\u8C03\u5730\u72F1\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">finalResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Got the final result: &#39;</span> <span class="token operator">+</span> finalResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A\u56DE\u8C03\u7ED1\u5B9A\u5230\u8FD4\u56DE\u7684 Promise \u4E0A\uFF0C\u5F62\u6210\u4E00\u4E2A Promise \u94FE\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">newResult</span> <span class="token operator">=&gt;</span> <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">finalResult</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Got the final result: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>finalResult<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="catch\u7684\u540E\u7EED\u94FE\u5F0F\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#catch\u7684\u540E\u7EED\u94FE\u5F0F\u64CD\u4F5C" aria-hidden="true">#</a> Catch\u7684\u540E\u7EED\u94FE\u5F0F\u64CD\u4F5C</h3><p><strong>\u56E0\u4E3A\u629B\u51FA\u4E86\u9519\u8BEF\uFF0C\u6240\u4EE5\u524D\u4E00\u4E2Athen\u4E2D\u7684\u56DE\u8C03\u4E0D\u4F1A\u6267\u884C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u521D\u59CB\u5316&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u6709\u54EA\u91CC\u4E0D\u5BF9\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6267\u884C\u300C\u8FD9\u4E2A\u300D&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6267\u884C\u300C\u90A3\u4E2A\u300D&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6267\u884C\u300C\u8FD9\u4E2A\u300D\uFF0C\u65E0\u8BBA\u524D\u9762\u53D1\u751F\u4E86\u4EC0\u4E48&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*
\u8F93\u51FA\u7ED3\u679C\uFF1A
\u521D\u59CB\u5316
\u6267\u884C\u201C\u90A3\u4E2A\u201D
\u6267\u884C\u201C\u8FD9\u4E2A\u201D\uFF0C\u65E0\u8BBA\u524D\u9762\u53D1\u751F\u4E86\u4EC0\u4E48
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u5408" aria-hidden="true">#</a> \u7EC4\u5408</h3><p><code>Promise.resolve()</code>\u548C<code>Promise.reject()</code>\u662F\u624B\u52A8\u521B\u5EFA\u4E00\u4E2A\u5DF2\u7ECF<code>resolve</code>\u6216\u8005<code>reject</code>\u7684Promise\u5FEB\u6377\u65B9\u6CD5\u3002 <code>Promise.all()</code>\u548C<code>Promise.race()</code>\u662F\u5E76\u884C\u8FD0\u884C\u5F02\u6B65\u64CD\u4F5C\u7684\u4E24\u4E2A\u7EC4\u5408\u5F0F\u5DE5\u5177\u3002</p><h4 id="promise-all" tabindex="-1"><a class="header-anchor" href="#promise-all" aria-hidden="true">#</a> Promise.all</h4><p>\u5982\u679C\u90FD\u6210\u529F\uFF0C\u5219\u8FD4\u56DE\u6240\u6709\u7684promise\uFF0C\u4F46\u662F\u53EA\u8981\u6709\u4E00\u4E2A\u5931\u8D25\uFF0C\u5C31\u4F1A\u629B\u51FA\u9519\u8BEF\u4FE1\u606F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: Array [3, 42, &quot;foo&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="promise-race" tabindex="-1"><a class="header-anchor" href="#promise-race" aria-hidden="true">#</a> Promise.race</h4><p>\u8FD4\u56DE\u4E00\u4E2Apromise\uFF0C\u4E00\u65E6\u8FED\u4EE3\u5668\u4E2D\u7684\u67D0\u4E2Apromise\u89E3\u51B3\u6216\u62D2\u7EDD\uFF0C\u8FD4\u56DE\u7684promise\u5C31\u4F1A\u89E3\u51B3\u6216\u62D2\u7EDD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// promise2\u66F4\u5FEB\uFF0C\u6240\u4EE5\u53EA\u6253\u5370two</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="promise\u4F18\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#promise\u4F18\u7F3A\u70B9" aria-hidden="true">#</a> promise\u4F18\u7F3A\u70B9</h3><ol><li>\u5BF9\u8C61\u7684\u72B6\u6001\u4E0D\u53D7\u5916\u754C\u5F71\u54CD</li><li>\u4E00\u65E6\u72B6\u6001\u6539\u53D8\uFF0C\u5C31\u4E0D\u4F1A\u518D\u53D8\uFF0C\u4EFB\u4F55\u65F6\u5019\u90FD\u53EF\u4EE5\u5F97\u5230\u8FD9\u4E2A\u7ED3\u679C</li><li>\u65E0\u6CD5\u53D6\u6D88Promise</li><li>\u5982\u679C\u4E0D\u8BBE\u7F6E\u56DE\u8C03\u51FD\u6570\uFF0CPromise\u5185\u90E8\u629B\u51FA\u7684\u9519\u8BEF\uFF0C\u4E0D\u4F1A\u53CD\u5E94\u5230\u5916\u90E8</li><li>\u5904\u4E8Epending\u72B6\u6001\u65F6\uFF0C\u65E0\u6CD5\u5F97\u77E5\u76EE\u524D\u8FDB\u5C55\u5230\u54EA\u4E00\u4E2A\u9636\u6BB5</li></ol>`,20);function t(e,o){return p}var l=n(a,[["render",t]]);export{l as default};
